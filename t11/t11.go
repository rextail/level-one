package t11

//Реализовать пересечение двух неупорядоченных множеств.

//Для того чтобы определить пересечение множеств, их элементы должны быть сравниваемыми.
//Конечно, существуют типы данных, которые мы как бы можем сравнить, используя рефлексию или кастомные методы и т.д.,
//но, наверное, функции для работы с такими множествами должны быть специализированными на конкретный тип.

func Intersection[S comparable](set1 []S, set2 []S) []S {
	m := make(map[S]struct{})

	minSetLen := min(len(set1), len(set2))

	//размер пересечения не может больше размера наименьшего множества
	intersect := make([]S, 0, minSetLen)
	for _, v := range set1 {
		m[v] = struct{}{}
	}
	for _, v := range set2 {
		if _, ok := m[v]; ok {
			intersect = append(intersect, v)
		}
	}

	return intersect
}
